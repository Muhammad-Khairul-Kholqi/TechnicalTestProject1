<div class="w-full lg:w-1/2 flex items-center justify-center p-6 lg:p-12 bg-white">
    <div class="w-full max-w-md">
        <h1 class="mb-2 text-2xl font-semibold text-gray-700">Welcome Back!</h1>
        <p class="mb-6 text-gray-500">Start managing your account!</p>
        
        <!-- Success/Error Messages -->
        <div id="messageContainer" class="hidden mb-4">
            <div id="successMessage" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded"></div>
            <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded"></div>
        </div>
        
        <form id="loginForm" class="space-y-6">
            @Html.AntiForgeryToken()
            
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-500">
                    Email Address <span class="text-red-500">*</span>
                </label>
                <div class="relative">
                    <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                        <i data-lucide="mail" class="w-5 h-5"></i>
                    </span>
                    <input 
                        type="email" 
                        id="email"
                        name="email"
                        placeholder="Enter your email"
                        class="w-full pl-12 pr-4 py-2 border-2 border-gray-200 rounded-md focus:border-gray-300 focus:outline-none transition-colors duration-200"
                        required
                    >
                </div>
            </div>

            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-500">
                    Password <span class="text-red-500">*</span>
                </label>
                <div class="relative">
                    <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                        <i data-lucide="lock-keyhole" class="w-5 h-5"></i>
                    </span>
                    <input 
                        type="password" 
                        id="passwordInput"
                        name="password"
                        placeholder="Enter your password"
                        class="w-full pl-12 pr-4 py-2 border-2 border-gray-200 rounded-md focus:border-gray-300 focus:outline-none transition-colors duration-200"
                        required
                    >
                    <span id="togglePassword" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 cursor-pointer">
                        <i data-lucide="eye" class="w-5 h-5"></i>
                    </span>
                </div>
            </div>

            <button type="submit" id="loginBtn" class="w-full bg-[#FE5F00] text-white font-semibold py-2 px-6 rounded-md hover:bg-orange-700 transition-all duration-300">
                <span id="loginBtnText">Sign In</span>
                <span id="loginBtnLoader" class="hidden">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Signing In...
                </span>
            </button>

            <div class="relative my-6">
                <div class="absolute inset-0 flex items-center">
                    <div class="w-full border-t border-gray-300"></div>
                </div>
                <div class="relative flex justify-center text-sm">
                    <span class="px-4 bg-white text-gray-500">or</span>
                </div>
            </div>

            <div id="g_id_onload"
                data-client_id="@ViewData["GoogleClientId"]"
                data-context="signin"
                data-ux_mode="popup"
                data-callback="handleGoogleSignin"
                data-auto_prompt="false">
            </div>

            <div class="g_id_signin"
                data-type="standard"
                data-shape="rectangular"
                data-theme="outline"
                data-text="signin_with"
                data-size="large"
                data-logo_alignment="center"
                data-width="100%">
            </div>

            <div class="text-end mt-6">
                <p class="text-gray-600">
                    Don't have an account? 
                    <a href="/registration" class="text-[#FE5F00] hover:text-orange-700 font-semibold transition-colors">
                        Registration here
                    </a>
                </p>
            </div>
        </form>
    </div>
</div>

<script src="https://accounts.google.com/gsi/client?hl=en" async defer></script>
<script>
    async function handleGoogleSignin(response) {
        try {
            const payload = JSON.parse(atob(response.credential.split('.')[1]));
            
            const googleUser = {
                email: payload.email,
                name: payload.name,
                picture: payload.picture,
                sub: payload.sub
            };

            const result = await fetch('/Auth/GoogleLogin', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(googleUser)
            });

            const data = await result.json();
            
            if (data.success) {
                showMessage('Login successful! Redirecting...', 'success');
                setTimeout(() => {
                    window.location.href = data.redirectUrl || '/dashboard'; 
                }, 2000);
            } else {
                showMessage(data.message || 'Login Google gagal.', 'error');
            }
        } catch (error) {
            console.error('Google signin error:', error);
            showMessage('Terjadi kesalahan saat login dengan Google.', 'error');
        }
    }

    function showMessage(message, type) {
        const messageContainer = document.getElementById('messageContainer');
        const successMessage = document.getElementById('successMessage');
        const errorMessage = document.getElementById('errorMessage');
        
        messageContainer.classList.remove('hidden');
        
        if (type === 'success') {
            successMessage.textContent = message;
            successMessage.classList.remove('hidden');
            errorMessage.classList.add('hidden');
        } else {
            errorMessage.textContent = message;
            errorMessage.classList.remove('hidden');
            successMessage.classList.add('hidden');
        }
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.getElementById('passwordInput');
        const togglePassword = document.getElementById('togglePassword');
        const loginForm = document.getElementById('loginForm');
        const loginBtn = document.getElementById('loginBtn');
        const loginBtnText = document.getElementById('loginBtnText');
        const loginBtnLoader = document.getElementById('loginBtnLoader');
        
        // Toggle password visibility
        togglePassword.addEventListener('click', function () {
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                this.innerHTML = `<i data-lucide="eye-off" class="w-5 h-5"></i>`;
            } else {
                passwordInput.type = 'password';
                this.innerHTML = `<i data-lucide="eye" class="w-5 h-5"></i>`;
            }
            lucide.createIcons();
        });

        // Ganti script submit form dengan ini:
        loginForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Show loading state
            loginBtn.disabled = true;
            loginBtnText.classList.add('hidden');
            loginBtnLoader.classList.remove('hidden');
            
            const formData = {
                email: document.getElementById('email').value,
                password: document.getElementById('passwordInput').value,
            };

            try {
                const response = await fetch('/Auth/Login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();
                
                if (result.success) {
                    window.location.href = result.redirectUrl || '/dashboard'; // Redirect langsung
                } else {
                    showMessage(result.message || 'Login gagal', 'error');
                    if (result.errors) {
                        showMessage(result.errors.join(', '), 'error');
                    }
                }
            } catch (error) {
                console.error('Login error:', error);
                showMessage('Terjadi kesalahan sistem', 'error');
            } finally {
                // Reset button state
                loginBtn.disabled = false;
                loginBtnText.classList.remove('hidden');
                loginBtnLoader.classList.add('hidden');
            }
        });
    });
</script>