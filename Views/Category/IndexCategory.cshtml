@{
    ViewData["Title"] = "Category";
}

<div class="bg-white p-5 rounded-lg">
    <h1 class="text-xl font-bold">Data Category</h1>

    @* Search and Controls *@
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between my-6 gap-4">
        <div class="flex flex-col lg:flex-row items-stretch lg:items-center gap-4 flex-1">
            @* Search Input *@
            <div class="relative flex-1 lg:min-w-[300px]">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i data-lucide="search" class="w-5 h-5 text-gray-400"></i>
                </div>
                <input type="text" 
                       class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-[#FE5F00] focus:border-[#FE5F00]" 
                       placeholder="Search category name">
            </div>

            @* Date Picker Dropdown *@
            <div class="relative">
                <button type="button" class="date-picker-btn w-full lg:w-[200px] inline-flex items-center justify-between px-4 py-2 border border-gray-300 rounded-md bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5F00]">
                    <div class="flex items-center gap-2">
                        <i data-lucide="calendar" class="w-5 h-5 text-gray-400"></i>
                        <span class="date-text">Pick Date</span>
                    </div>
                    <i data-lucide="chevron-down" class="w-5 h-5 text-gray-400"></i>
                </button>
                <div class="date-picker-dropdown absolute left-0 mt-2 w-full bg-white border border-gray-200 rounded-md shadow-lg z-10 hidden">
                    <div class="p-3">
                        <input type="date" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-[#FE5F00] focus:border-[#FE5F00]">
                    </div>
                </div>
            </div>

            @* Entries Dropdown *@
            <div class="relative">
                <button type="button" class="entries-btn w-full lg:w-[200px] inline-flex items-center justify-between px-4 py-2 border border-gray-300 rounded-md bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5F00]">
                    <span class="entries-text">5 Data Entries</span>
                    <i data-lucide="chevron-down" class="w-5 h-5 text-gray-400"></i>
                </button>
                <div class="entries-dropdown absolute left-0 mt-2 w-full bg-white border border-gray-200 rounded-md shadow-lg z-10 hidden">
                    <div class="py-1">
                        <a href="#" class="entries-option block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-value="5 Data Entries">5 Data Entries</a>
                        <a href="#" class="entries-option block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-value="10 Data Entries">10 Data Entries</a>
                        <a href="#" class="entries-option block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-value="20 Data Entries">20 Data Entries</a>
                        <a href="#" class="entries-option block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-value="50 Data Entries">50 Data Entries</a>
                    </div>
                </div>
            </div>

            @* Add Category Button *@
            <button type="button" class="w-full lg:w-[200px] inline-flex items-center justify-center px-4 py-2 bg-[#FE5F00] text-white rounded-md hover:bg-[#E54900] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5F00]">
                <i data-lucide="plus" class="w-5 h-5 text-white mr-2"></i>
                Add Category
            </button>
        </div>
    </div>

    @* Table *@
    <div class="relative overflow-x-auto sm:rounded-lg">
        <table class="w-full text-sm text-left">
            <thead class="text-md text-gray-700 uppercase border-b border-gray-200">
                <tr>
                    <th scope="col" class="px-6 py-3">
                        <input type="checkbox">
                    </th>
                    <th scope="col" class="px-6 py-3">
                        CATEGORY NAME 
                    </th>
                    <th scope="col" class="px-6 py-3">
                        CREATOR
                    </th>
                    <th scope="col" class="px-6 py-3">
                        DATE
                    </th>
                    <th scope="col" class="px-6 py-3">
                        ACTION
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    var categorys = new[] {
                        new { Id = 1, CategoryName = "Food", Creator = "Muhammad Khairul Kholqi", Date = "12 December 2025" },
                        new { Id = 2, CategoryName = "Food", Creator = "John Doe", Date = "13 December 2025" },
                        new { Id = 3, CategoryName = "Food", Creator = "Jane Smith", Date = "14 December 2025" },
                        new { Id = 4, CategoryName = "Beverage", Creator = "Fresh Co", Date = "15 December 2025" },
                        new { Id = 5, CategoryName = "Beverage", Creator = "Coffee Corp", Date = "16 December 2025" }
                    };
                }
                
                @foreach (var category in categorys)
                {
                    <tr class="text-md hover:bg-gray-100">
                        <td class="px-6 py-4">
                            <input type="checkbox">
                        </td>
                        <td class="px-6 py-4">
                            @category.CategoryName
                        </td>
                        <td class="px-6 py-4">
                            @category.Creator
                        </td>
                        <td class="px-6 py-4">
                            @category.Date
                        </td>
                        <td class="px-6 py-4">
                            <div class="flex items-center gap-5">
                                <a 
                                    href="@Url.Action("Edit", "Category", new { id = category.Id })" 
                                    class="text-green-500 hover:underline font-medium"
                                >
                                    Edit
                                </a>
                                <form action="@Url.Action("Delete", "Category", new { id = category.Id })" method="post" class="inline">
                                    <button type="submit" class="text-red-500 hover:underline font-medium"> 
                                        Delete
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Tab functionality
        const tabItems = document.querySelectorAll('.tab-item');
        tabItems.forEach(tab => {
            tab.addEventListener('click', function() {
                // Remove active class from all tabs
                tabItems.forEach(t => {
                    t.classList.remove('active');
                    const span = t.querySelector('span');
                    const line = t.querySelector('div');
                    span.classList.remove('text-[#FE5F00]');
                    span.classList.add('text-gray-500');
                    line.classList.remove('bg-[#FE5F00]');
                    line.classList.add('bg-transparent');
                });
                
                // Add active class to clicked tab
                this.classList.add('active');
                const span = this.querySelector('span');
                const line = this.querySelector('div');
                span.classList.add('text-[#FE5F00]');
                span.classList.remove('text-gray-500');
                line.classList.add('bg-[#FE5F00]');
                line.classList.remove('bg-transparent');
            });
        });

        // Date picker dropdown
        const datePickerBtn = document.querySelector('.date-picker-btn');
        const datePickerDropdown = document.querySelector('.date-picker-dropdown');
        const dateInput = datePickerDropdown.querySelector('input[type="date"]');
        const dateText = document.querySelector('.date-text');

        datePickerBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            datePickerDropdown.classList.toggle('hidden');
            // Close entries dropdown if open
            document.querySelector('.entries-dropdown').classList.add('hidden');
        });

        dateInput.addEventListener('change', function() {
            if (this.value) {
                const date = new Date(this.value);
                const options = { year: 'numeric', month: 'long', day: 'numeric' };
                dateText.textContent = date.toLocaleDateString('en-US', options);
            } else {
                dateText.textContent = 'Pick Date';
            }
            datePickerDropdown.classList.add('hidden');
        });

        // Entries dropdown
        const entriesBtn = document.querySelector('.entries-btn');
        const entriesDropdown = document.querySelector('.entries-dropdown');
        const entriesText = document.querySelector('.entries-text');
        const entriesOptions = document.querySelectorAll('.entries-option');

        entriesBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            entriesDropdown.classList.toggle('hidden');
            // Close date picker dropdown if open
            datePickerDropdown.classList.add('hidden');
        });

        entriesOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                entriesText.textContent = this.getAttribute('data-value');
                entriesDropdown.classList.add('hidden');
            });
        });

        // Close dropdowns when clicking outside
        document.addEventListener('click', function() {
            datePickerDropdown.classList.add('hidden');
            entriesDropdown.classList.add('hidden');
        });
    });
</script>